//stream.proto
syntax = "proto3" ;

option go_package = "./;protoMq" ;


// 推送数据参数
message PushDataReq{
  string Topic             = 1 ; // 频道
  bytes  Data              = 2 ; // 数据内容
}

// 推送数据返回
message PushDataRes{
  int32  ErrNum            = 1 ; // 错误编号，0为正常
  string Msg               = 2 ; // 消息内容
}

// 拉取数据参数
message PullDataReq{
  repeated string Topics   = 1 ; // 频道: 支持多个
  bool            ZLib     = 2 ; // 返回Data数据的类型
  int64           Position = 3 ; // 已读取到的位置
}

// 拉取的一条数据格式
message DataItem{
  int32  DataId            = 2 ; // 数据id
  int32  TopicId           = 1 ; // 频道id, 为0表示只是占位数据
  bytes  Data              = 3 ; // 数据内容
}

// DataItem 数组
message DataGroup{
  int32 Bucket            = 1 ; // 数据所在的bucket
  repeated DataItem Items = 2 ; // 数据明细
}

// 拉取数据返回【一次只返回一个频道数据，切不会跨bucket】
message PullDataRes{
  int32  ErrNum            = 1 ; // 错误编号，0为正常
  map    <int32,string>    TopicMap = 2 ; // 数据包含的频道id和名称(格式为 map[int32]string)
  bytes  DataMix           = 3 ; // 第一个字节为压缩标记，其后为数据内容；数据内容，未压缩直接反序列化成DataItems，压缩后需要解压再反序列化成DataItems
}

// 流需要stream 标识
service Mq {
  rpc  PushData(PushDataReq) returns (PushDataRes);
  rpc  PullData(PullDataReq) returns (stream PullDataRes);
}

/*
protoc --go_out=./ mq.proto
protoc --go-grpc_out=./ mq.proto
 */
