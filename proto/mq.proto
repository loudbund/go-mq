//stream.proto
syntax = "proto3" ;

option go_package = "./;protoMq" ;


// 推送数据参数
message PushDataReq{
  bytes  Topic             = 1 ; // 频道
  bytes  Data              = 2 ; // 数据内容
}

// 推送数据返回
message PushDataRes{
  int32  ErrNum            = 1 ; // 错误编号，0为正常
  string Msg               = 2 ; // 消息内容
}

// 拉取数据参数
message PullDataReq{
  repeated bytes  Topics   = 1 ; // 频道: 支持多个
  int64           Position = 2 ; // 已读取到的位置
}

// 拉取数据返回【一次只返回一个频道数据，切不会跨bucket】
message PullDataRes{
  int32  ErrNum            = 1 ; // 错误编号，0为正常
  int64  Position          = 2 ; // 位置
  bytes  Topic             = 3 ; // 频道名称(为空表示没有数据，此时Position有可能是变化了的)
  bytes  Data              = 4 ; // 数据内容
}

// 流需要stream 标识
service Mq {
  rpc  PushData(PushDataReq) returns (PushDataRes);
  rpc  PullData(PullDataReq) returns (stream PullDataRes);
}

/*
protoc --go_out=./ mq.proto
protoc --go-grpc_out=./ mq.proto
 */
